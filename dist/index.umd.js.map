{"version":3,"file":"index.umd.js","sources":["../src/store.js","../src/keyboard.js","../src/loader.js","../src/index.js"],"sourcesContent":["export default class Store {\n  constructor(controller) {\n    this.controller = controller;\n  }\n\n  get key() {\n    return this.controller.storeKeyValue;\n  }\n\n  get nodes() {\n    return this.controller.nodes;\n  }\n\n  get openedNodes() {\n    return this.controller.openedNodes;\n  }\n  \n  load() {\n    if (!this.key) return;\n\n    let ids = this.constructor.load(this.key);\n    if (!ids) return;\n\n    let idSet = new Set(ids);\n    this.nodes.forEach(node => {\n      if (idSet.has(node.getAttribute('data-node-id'))) {\n        this.controller.show(node);\n      } else {\n        this.controller.hide(node);\n      }\n    });\n  }\n\n  save() {\n    if (!this.key) return;\n\n    let ids = this.openedNodes.map(node => node.getAttribute('data-node-id'));\n    this.constructor.save(this.key, ids);\n  }\n\n  static load(key) {\n    let json = sessionStorage.getItem(key);\n    try {\n      return JSON.parse(json)\n    } catch(error) {\n      console.error(error);\n      return null;\n    }\n  }\n\n  static save(key, value) {\n    try {\n      sessionStorage.setItem(key, JSON.stringify(value));\n    } catch(error) {\n      console.error(error);\n      return null;\n    }\n  }\n}\n","export default class Keyboard {\n  constructor(controller) {\n    this.controller = controller;\n  }\n\n  get visibleIcons() {\n    let nodes = this.controller.visibleNodes.filter(node => !this.controller.isLeaf(node));\n    return nodes.map(node => this.controller.findIcon(node));\n  }\n\n  keydown(e) {\n    if (!this.controller.isIcon(e.target)) return;\n\n    let node = e.target.parentElement;\n\n    switch (e.code) {\n    case 'ArrowLeft':\n      this.moveLeft(node);\n      e.preventDefault();\n      break;\n    case 'ArrowUp':\n      this.moveUp(node);\n      e.preventDefault();\n      break;\n    case 'ArrowRight':\n      this.moveRight(node);\n      e.preventDefault();\n      break;\n    case 'ArrowDown':\n      this.moveDown(node);\n      e.preventDefault();\n      break;\n    }\n  }\n\n  moveUp(node) {\n    let icons = this.visibleIcons;\n    let index = icons.indexOf(this.controller.findIcon(node)) - 1;\n    if (index >= 0 && icons[index]) icons[index].focus();\n  }\n\n  moveDown(node) {\n    let icons = this.visibleIcons;\n    let index = icons.indexOf(this.controller.findIcon(node)) + 1;\n    if (index >= 0 && icons[index]) icons[index].focus();\n  }\n\n  moveRight(node) {\n    if (this.controller.isOpened(node)) {\n      let child = this.controller.children(node)[0];\n      if (child) {\n        let icon = this.controller.findIcon(child);\n        if (icon) icon.focus();\n      }\n    } else {\n      this.controller.open(node);\n    }\n  }\n\n  moveLeft(node) {\n    if (!this.controller.isOpened(node)) {\n      let parent = this.controller.parent(node);\n      if (parent) {\n        let icon = this.controller.findIcon(parent)\n        if (icon) icon.focus();\n      }\n    } else {\n      this.controller.close(node);\n    }\n  }\n}\n","export default class Loader {\n  constructor(controller) {\n    this.controller = controller;\n  }\n\n  init() {\n    this.controller.roots.forEach(root => this.loadDescs(root));\n  }\n\n  loadDescs(origin) {\n    let nodes = this.controller.descendants(origin).filter(node => {\n      return this.controller.isLazy(node) && this.controller.isOpened(node) && !this.controller.isLazyLoaded(node)\n    });\n    nodes.forEach(node => this.load(node));\n  }\n\n  async load(node) {\n    node.setAttribute('aria-busy', 'true');\n\n    try {\n      let response = await fetch(node.getAttribute('data-node-lazy'), {\n        headers: {\n          'X-Requested-With': 'XMLHttpRequest'\n        }\n      });\n      if (response.ok) {\n        let text = await response.text();\n        this.loaded(node, text);\n        this.loadDescs(node);\n      }\n    } catch(e) {\n      console.error(e);\n    }\n\n    node.removeAttribute('aria-busy');\n  }\n\n  loaded(node, html) {\n    this.replace(node, html);\n    this.controller.initDescs(node);\n    this.controller.store.save();\n    this.controller.dispatch('loaded', { detail: { node: node, html: html } });\n  }\n\n  replace(node, html) {\n    let nodeID = node.getAttribute('data-node-id');\n    let tmp = document.createElement('div');\n    tmp.innerHTML = html;\n    node.innerHTML = tmp.querySelector(`[data-node-id=\"${nodeID}\"]`).innerHTML;\n    this.controller.setLazyLoaded(node);\n  }\n}\n","import { Controller } from '@hotwired/stimulus';\nimport '@kanety/stimulus-static-actions';\nimport Store from './store';\nimport Keyboard from './keyboard';\nimport Loader from './loader';\nimport './index.scss';\n\nexport default class extends Controller {\n  static values = {\n    storeKey: String\n  };\n  static actions = [\n    ['element', 'click->toggle'],\n    ['element', 'keydown->keydown']\n  ];\n\n  get roots() {\n    return Array.from(this.element.children);\n  }\n\n  get nodes() {\n    return this.scope.findAllElements('li');\n  }\n\n  get openedNodes() {\n    return this.nodes.filter(node => this.isOpened(node));\n  }\n\n  get visibleNodes() {\n    return this.nodes.filter(node => this.ancestors(node).slice(0, -1).every(a => this.isOpened(a)));\n  }\n\n  connect() {\n    this.init();\n    this.keyboard = new Keyboard(this);\n    this.store = new Store(this);\n    this.store.load();\n    this.loader = new Loader(this);\n    this.loader.init();\n  }\n\n  init() {\n    this.roots.forEach(root => this.initDescs(root));\n  }\n\n  initDescs(origin) {\n    this.descendants(origin).forEach(node => {\n      if (this.children(node).length == 0 && !this.isLazy(node)) {\n        node.classList.add('st-tree__node--leaf', 'st-tree__node--closed');\n      }\n    });\n  }\n\n  toggle(e) {\n    if (!this.isIcon(e.target)) return;\n\n    let node = e.target.parentElement;\n    if (this.isOpened(node)) {\n      this.close(node);\n    } else {\n      this.open(node);\n    }\n\n    e.preventDefault();\n  }\n\n  expand(e) {\n    this.nodes.filter(node => !this.isOpened(node)).forEach(node => this.open(node));\n  }\n\n  collapse(e) {\n    this.nodes.filter(node => this.isOpened(node)).forEach(node => this.close(node));\n  }\n\n  keydown(e) {\n    this.keyboard.keydown(e);\n  }\n\n  open(node) {\n    this.show(node);\n    this.store.save();\n    this.dispatch('opened', { detail: { node: node } });\n\n    if (this.isLazy(node) && !this.isLazyLoaded(node)) {\n      this.loader.load(node);\n    }\n  }\n\n  close(node) {\n    this.hide(node);\n    this.store.save();\n    this.dispatch('closed', { detail: { node: node } });\n  }\n\n  show(node) {\n    node.classList.remove('st-tree__node--closed');\n  }\n\n  hide(node) {\n    node.classList.add('st-tree__node--closed');\n  }\n\n  parent(node) {\n    let parent = node.parentElement.parentElement;\n    return parent && parent.matches('li') ? parent : null;\n  }\n\n  children(node) {\n    let ul = Array.from(node.children).find(child => child.matches('ul'));\n    return ul ? Array.from(ul.children) : [];\n  }\n\n  ancestors(node) {\n    let parent = this.parent(node);\n    return parent ? this.ancestors(parent).concat([node]) : [node];\n  }\n\n  descendants(node) {\n    return [node].concat(this.children(node).flatMap(child => this.descendants(child)));\n  }\n\n  isOpened(node) {\n    return !node.matches('.st-tree__node--closed');\n  }\n\n  isLeaf(node) {\n    return node.matches('.st-tree__node--leaf');\n  }\n\n  findIcon(node) {\n    return node.querySelector('a[href=\"#icon\"]');\n  }\n\n  isIcon(elem) {\n    return elem.matches('a[href=\"#icon\"]');\n  }\n\n  isLazy(node) {\n    return node.matches('[data-node-lazy]');\n  }\n\n  isLazyLoaded(node) {\n    return node.matches('[data-node-lazy-loaded]') || this.children(node).length != 0;\n  }\n\n  setLazyLoaded(node) {\n    node.setAttribute('data-node-lazy-loaded', 'true');\n  }\n}\n"],"names":["Store","constructor","controller","this","key","storeKeyValue","nodes","openedNodes","load","ids","idSet","Set","forEach","node","has","getAttribute","show","hide","save","map","static","json","sessionStorage","getItem","JSON","parse","error","console","value","setItem","stringify","Keyboard","visibleIcons","visibleNodes","filter","isLeaf","findIcon","keydown","e","isIcon","target","parentElement","code","moveLeft","preventDefault","moveUp","moveRight","moveDown","icons","index","indexOf","focus","isOpened","child","children","icon","open","close","parent","Loader","init","roots","root","loadDescs","origin","descendants","isLazy","isLazyLoaded","removeAttribute","setAttribute","body","recover","result","fetch","headers","response","ok","text","_this2","loaded","then","html","replace","initDescs","store","dispatch","detail","nodeID","tmp","document","createElement","innerHTML","querySelector","setLazyLoaded","Controller","Array","from","element","scope","findAllElements","ancestors","slice","every","a","connect","keyboard","loader","length","classList","add","toggle","expand","collapse","remove","matches","ul","find","concat","flatMap","elem","values","storeKey","String","actions"],"mappings":"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"}